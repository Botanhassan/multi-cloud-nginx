name: Deploy Infra and Configure NGINX

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=terraform-aws init

      - name: Terraform Plan
        run: terraform -chdir=terraform-aws plan -var-file="terraform.tfvars"

      - name: Terraform Apply
        run: terraform -chdir=terraform-aws apply -auto-approve -var-file="terraform.tfvars"

      - name: Terraform Output
        run: terraform -chdir=terraform-aws output

      - name: Set up Ansible
        run: |
          sudo apt update
          sudo apt install ansible -y

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          SERVER_IP=$(awk '{print $1}' ansible/inventory.ini)
          ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/playbook.yml

      - name: Test HTTP Response
        run: |
          SERVER_IP=$(awk '{print $1}' ansible/inventory.ini)
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" http://$SERVER_IP)
          if [ "$STATUS" -eq 200 ]; then
            echo "✅ Le serveur NGINX est accessible. Code HTTP: $STATUS"
          else
            echo "❌ Le serveur NGINX n'est pas accessible. Code HTTP: $STATUS"
            exit 1
          fi
